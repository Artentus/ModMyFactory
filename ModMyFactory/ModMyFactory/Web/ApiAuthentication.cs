using System.Net;
using System.Security;
using System.Text;
using ModMyFactory.Helpers;
using ModMyFactory.Web.AuthenticationApi;

namespace ModMyFactory.Web
{
    static class ApiAuthentication
    {
        /// <summary>
        /// Logs in at the api.
        /// </summary>
        /// <param name="username">The username.</param>
        /// <param name="password">The users password.</param>
        /// <param name="info">Out. The login token generated by the server and the users name.</param>
        /// <returns>Returns false if the login failed, otherwise true.</returns>
        public static bool LogIn(string username, SecureString password, out AuthenticationInfo info)
        {
            const string loginPage = "https://auth.factorio.com/api-login";

            info = null;

            string part1 = $"api_version=2&require_game_ownership=true&username={username}&password=";
            int part1Length = Encoding.UTF8.GetByteCount(part1);
            int part2Length = SecureStringHelper.GetSecureStringByteCount(password);

            byte[] content = new byte[part1Length + part2Length];
            Encoding.UTF8.GetBytes(part1, 0, part1.Length, content, 0);
            SecureStringHelper.SecureStringToBytes(password, content, part1Length);
            
            try
            {
                string document = WebHelper.GetDocument(loginPage, null, content);
                if (string.IsNullOrWhiteSpace(document)) return false;

                info = JsonHelper.Deserialize<AuthenticationInfo>(document);
                if ((info == null) || string.IsNullOrWhiteSpace(info.Token) || string.IsNullOrWhiteSpace(info.Username)) return false;

                return true;
            }
            catch (WebException ex)
            {
                if (ex.Status == WebExceptionStatus.ProtocolError) return false;
                else throw;
            }
            finally
            {
                SecureStringHelper.DestroySecureByteArray(content);
            }
        }
    }
}
