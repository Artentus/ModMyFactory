<controls:LayoutRoundingWindow x:Class="ModMyFactory.Views.MainWindow" x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:ModMyFactory.ViewModels"
        xmlns:lang="clr-namespace:ModMyFactory.Lang"
        xmlns:model="clr-namespace:ModMyFactory.Models"
        xmlns:mvvm="clr-namespace:ModMyFactory.MVVM"
        xmlns:controls="clr-namespace:ModMyFactory.Controls"
        xmlns:local="clr-namespace:ModMyFactory"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="{DynamicResource MainWindowTitle}"
        WindowStyle="SingleBorderWindow" ResizeMode="CanResize"
        Icon="..\Images\MMF_Icon.ico"
        DataContext="{x:Static vm:MainViewModel.Instance}"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
        Style="{StaticResource WindowStyle}">

    <Window.Resources>
        <BitmapImage x:Key="AddIcon" UriSource="../Images/Add.png"/>
        <BitmapImage x:Key="AddDocumentIcon" UriSource="../Images/AddDocument.png"/>
        <BitmapImage x:Key="AddFolderIcon" UriSource="../Images/AddFolder.png"/>
        <BitmapImage x:Key="CloseIcon" UriSource="../Images/Close.png"/>
        <BitmapImage x:Key="ConfigureIcon" UriSource="../Images/Configure.png"/>
        <BitmapImage x:Key="DeleteIcon" UriSource="../Images/Delete.png"/>
        <BitmapImage x:Key="DependencyIcon" UriSource="../Images/Dependency.png"/>
        <BitmapImage x:Key="DependencyWarningIcon" UriSource="../Images/DependencyWarning.png"/>
        <BitmapImage x:Key="DownloadIcon" UriSource="../Images/Download.png"/>
        <BitmapImage x:Key="ExportPackageIcon" UriSource="../Images/ExportPackage.png"/>
        <BitmapImage x:Key="HelpIcon" UriSource="../Images/Help.png"/>
        <BitmapImage x:Key="ImportPackageIcon" UriSource="../Images/ImportPackage.png"/>
        <BitmapImage x:Key="InformationIcon" UriSource="../Images/Information.png"/>
        <BitmapImage x:Key="InvertedIcon" UriSource="../Images/Inverted_small.png"/>
        <BitmapImage x:Key="LinkIcon" UriSource="../Images/Link.png"/>
        <BitmapImage x:Key="LockButtonIcon" UriSource="../Images/Lock.png"/>
        <BitmapImage x:Key="LockHoverIcon" UriSource="../Images/Lock_blue.png"/>
        <BitmapImage x:Key="MenuIcon" UriSource="../Images/Menu.png"/>
        <BitmapImage x:Key="NewPackageIcon" UriSource="../Images/NewPackage.png"/>
        <BitmapImage x:Key="OpenFolderIcon" UriSource="../Images/OpenFolder.png"/>
        <BitmapImage x:Key="OptionalIcon" UriSource="../Images/Optional_small.png"/>
        <BitmapImage x:Key="RefreshIcon" UriSource="../Images/Refresh_blue.png"/>
        <BitmapImage x:Key="RenameActiveIcon" UriSource="../Images/RenameActive.png"/>
        <BitmapImage x:Key="RenameInactiveIcon" UriSource="../Images/RenameInactive.png"/>
        <BitmapImage x:Key="RunIcon" UriSource="../Images/Run.png"/>
        <BitmapImage x:Key="SettingsIcon" UriSource="../Images/Settings.png"/>
        <BitmapImage x:Key="SettingsButtonIcon" UriSource="../Images/Settings_gray.png"/>
        <BitmapImage x:Key="SettingsHoverIcon" UriSource="../Images/Settings_blue.png"/>
        <BitmapImage x:Key="ThemesIcon" UriSource="../Images/Themes.png"/>
        <BitmapImage x:Key="UpdateIcon" UriSource="../Images/Update.png"/>
        <BitmapImage x:Key="WarningIcon" UriSource="../Images/Warning.png"/>
        <BitmapImage x:Key="WebDestinationIcon" UriSource="../Images/WebDestination.png"/>

        <BitmapImage x:Key="SearchIcon" UriSource="../Images/Search.png"/>
        
        <sys:Boolean x:Key="False">False</sys:Boolean>
        <sys:Boolean x:Key="True">True</sys:Boolean>

        <Style x:Key="ActiveInactiveCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Style.Setters>
                <Setter Property="ToolTip" Value="{DynamicResource SetActiveToolTip}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.Setters>
                        <Setter Property="ToolTip" Value="{DynamicResource SetInactiveToolTip}"/>
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Trigger.Setters>
                        <Setter Property="ToolTip" Value="{DynamicResource SetInactiveToolTip}"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AllActiveInactiveCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Style.Setters>
                <Setter Property="ToolTip" Value="{DynamicResource SetAllActiveToolTip}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.Setters>
                        <Setter Property="ToolTip" Value="{DynamicResource SetAllInactiveToolTip}"/>
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Trigger.Setters>
                        <Setter Property="ToolTip" Value="{DynamicResource SetAllInactiveToolTip}"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <ControlTemplate x:Key="SettingsButtonTemplate" TargetType="{x:Type Button}">
            <Image x:Name="Image" Source="{DynamicResource SettingsButtonIcon}" Stretch="None" VerticalAlignment="Center" UseLayoutRounding="True"/>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter TargetName="Image" Property="Source" Value="{DynamicResource SettingsHoverIcon}"/>
                    </Trigger.Setters>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="SettingsButtonStyle" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Template" Value="{StaticResource SettingsButtonTemplate}"/>
            </Style.Setters>
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="F7" Command="{Binding DownloadModsCommand}"/>
        <KeyBinding Key="F8" Command="{Binding AddModsFromFilesCommand}"/>
        <KeyBinding Modifiers="Control" Key="F8" Command="{Binding AddModFromFolderCommand}"/>
        <KeyBinding Modifiers="Control" Key="N" Command="{Binding CreateModpackCommand}"/>
        <KeyBinding Modifiers="Control" Key="L" Command="{Binding CreateLinkCommand}"/>
        <KeyBinding Modifiers="Control" Key="E" Command="{Binding ExportModpacksCommand}"/>
        <KeyBinding Modifiers="Control" Key="I" Command="{Binding ImportModpacksCommand}"/>
        <KeyBinding Key="F6" Command="{Binding StartGameCommand}"/>
        <KeyBinding Modifiers="Control" Key="U" Command="{Binding UpdateModsCommand}"/>
        <KeyBinding Modifiers="Control" Key="D" Command="{Binding DownloadDependenciesCommand}"/>
        <KeyBinding Key="F10" Command="{Binding OpenVersionManagerCommand}"/>
        <KeyBinding Key="F12" Command="{Binding OpenSettingsCommand}"/>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
        <KeyBinding Key="F1" Command="{Binding BrowseWikiCommand}"/>
        <KeyBinding Key="F3" Command="{Binding UpdateCommand}" CommandParameter="{StaticResource False}"/>
        <KeyBinding Modifiers="Control" Key="F1" Command="{Binding OpenAboutWindowCommand}"/>
        <KeyBinding Key="Delete" Command="{Binding DeleteSelectedModsAndModpacksCommand}"/>
    </Window.InputBindings>
    
    <Window.CommandBindings>
        <CommandBinding Command="Close" Executed="Close" CanExecute="CanExecuteCommandDefault"/>
    </Window.CommandBindings>

    <Grid Margin="4,0,4,4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" IsMainMenu="True">
            <MenuItem Header="{DynamicResource FileMenuItem}">
                <MenuItem Header="{DynamicResource AddModsMenuItem}" Icon="{StaticResource AddIcon}">
                    <MenuItem Header="{DynamicResource DownloadModsMenuItem}" Icon="{StaticResource DownloadIcon}"
                              InputGestureText="{DynamicResource DownloadModsHotkey}" Command="{Binding DownloadModsCommand}"/>
                    <MenuItem Header="{DynamicResource AddModFilesMenuItem}" Icon="{StaticResource AddDocumentIcon}"
                              InputGestureText="{DynamicResource AddModFilesHotkey}" Command="{Binding AddModsFromFilesCommand}"/>
                    <MenuItem Header="{DynamicResource AddModFolderMenuItem}" Icon="{StaticResource AddFolderIcon}"
                              InputGestureText="{DynamicResource AddModFolderHotkey}" Command="{Binding AddModFromFolderCommand}"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource NewModpackMenuItem}" Icon="{StaticResource NewPackageIcon}"
                          InputGestureText="{DynamicResource NewModpackHotkey}" Command="{Binding CreateModpackCommand}"/>
                <MenuItem Header="{DynamicResource CreateLinkMenuItem}" Icon="{StaticResource LinkIcon}"
                          InputGestureText="{DynamicResource CreateLinkHotkey}" Command="{Binding CreateLinkCommand}"/>

                <Separator/>

                <MenuItem Header="{DynamicResource ExportModpacksMenuItem}" Icon="{StaticResource ExportPackageIcon}"
                          InputGestureText="{DynamicResource ExportModpacksHotkey}" Command="{Binding ExportModpacksCommand}"/>
                <MenuItem Header="{DynamicResource ImportModpacksMenuItem}" Icon="{StaticResource ImportPackageIcon}"
                          InputGestureText="{DynamicResource ImportModpacksHotkey}" Command="{Binding ImportModpacksCommand}"/>

                <Separator/>
                
                <MenuItem Header="{DynamicResource StartGameMenuItem}" Icon="{StaticResource RunIcon}"
                          InputGestureText="{DynamicResource StartGameHotkey}" Command="{Binding StartGameCommand}"/>
                
                <Separator/>
                
                <MenuItem Header="{DynamicResource CloseMenuItem}" Icon="{StaticResource CloseIcon}"
                          InputGestureText="{DynamicResource CloseHotkey}" Command="Close"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource EditMenuItem}">
                <MenuItem Header="{DynamicResource UpdateModsMenuItem}" Icon="{StaticResource UpdateIcon}"
                          InputGestureText="{DynamicResource UpdateModsHotkey}" Command="{Binding UpdateModsCommand}"/>
                <MenuItem Header="{DynamicResource DependenciesMenuItem}" Icon="{StaticResource DependencyIcon}"
                          InputGestureText="{DynamicResource DependenciesHotkey}" Command="{Binding DownloadDependenciesCommand}"/>

                <Separator/>

                <MenuItem Header="{DynamicResource VersionManagerMenuItem}" Icon="{StaticResource ConfigureIcon}"
                          InputGestureText="{DynamicResource VersionManagerHotkey}" Command="{Binding OpenVersionManagerCommand}"/>
                <MenuItem Header="{DynamicResource SettingsMenuItem}" Icon="{StaticResource SettingsIcon}"
                          InputGestureText="{DynamicResource SettingsHotkey}" Command="{Binding OpenSettingsCommand}"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource ViewMenuItem}">
                <MenuItem Header="{DynamicResource OpenFactorioFolderMenuItem}" Icon="{StaticResource OpenFolderIcon}"
                          Command="{Binding OpenFactorioFolderCommand}"/>
                <MenuItem Header="{DynamicResource OpenModFolderMenuItem}" Icon="{StaticResource OpenFolderIcon}"
                          Command="{Binding OpenModFolderCommand}"/>
                <MenuItem Header="{DynamicResource OpenSavegameFolderMenuItem}" Icon="{StaticResource OpenFolderIcon}"
                          Command="{Binding OpenSavegameFolderCommand}"/>
                <MenuItem Header="{DynamicResource OpenScenarioFolderMenuItem}" Icon="{StaticResource OpenFolderIcon}"
                          Command="{Binding OpenScenarioFolderCommand}"/>

                <Separator/>

                <MenuItem Header="{DynamicResource ThemeMenuItem}" Icon="{StaticResource ThemesIcon}" ItemsSource="{Binding Themes}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:Theme}">
                            <TextBlock Margin="0,0,6,0" Text="{Binding Name, Converter={StaticResource ThemeNameConverter}}"/>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="mvvm:MenuItemProperties.ShowChecked" Value="True"/>
                            <Setter Property="IsChecked" Value="{Binding Selected, Mode=OneWay}"/>
                            <Setter Property="Icon" Value="{Binding Image}"/>
                            <Setter Property="Command" Value="{Binding SelectCommand}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>

                <Separator/>

                <MenuItem Header="{DynamicResource RefreshMenuItem}" Icon="{StaticResource RefreshIcon}"
                          InputGestureText="{DynamicResource RefreshHotkey}"  Command="{Binding RefreshCommand}"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource LanguageMenuItem}" ItemsSource="{Binding AvailableCulturesView}">
                <MenuItem.ItemTemplate>
                    <DataTemplate DataType="{x:Type lang:CultureEntry}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="0,0,6,0" Text="{Binding Name}"/>
                            <TextBlock Grid.Column="1" Text="{Binding EnglishName, StringFormat=({0})}"/>
                        </Grid>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="mvvm:MenuItemProperties.ShowChecked" Value="True"/>
                        <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=OneWay}"/>
                        <Setter Property="Icon" Value="{Binding Flag}"/>
                        <Setter Property="Command" Value="{Binding SelectCommand}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="{DynamicResource InfoMenuItem}">
                <MenuItem Header="{DynamicResource HelpMenuItem}" Icon="{StaticResource HelpIcon}"
                          InputGestureText="{DynamicResource HelpHotkey}" Command="{Binding BrowseWikiCommand}"/>

                <MenuItem Header="{DynamicResource CheckUpdateMenuItem}" Icon="{StaticResource UpdateIcon}"
                          InputGestureText="{DynamicResource UpdateHotkey}" Command="{Binding UpdateCommand}" CommandParameter="{StaticResource False}"/>

                <Separator/>
                
                <MenuItem Header="{DynamicResource FactorioComMenuItem}" Icon="{StaticResource WebDestinationIcon}" Command="{Binding BrowseFactorioWebsiteCommand}"/>
                <MenuItem Header="{DynamicResource FactorioModsComMenuItem}" Icon="{StaticResource WebDestinationIcon}" Command="{Binding BrowseModWebsiteCommand}"/>
                <MenuItem Header="{DynamicResource ForumThreadMenuItem}" Icon="{StaticResource WebDestinationIcon}" Command="{Binding BrowseForumThreadCommand}"/>
                
                <Separator/>

                <MenuItem Header="{DynamicResource AboutMenuItem}" Icon="{StaticResource InformationIcon}"
                          InputGestureText="{DynamicResource AboutHotkey}" Command="{Binding OpenAboutWindowCommand}"/>
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1" Margin="0,4,0,0">
            <ToggleButton x:Name="AddModsToggleButton" ToolTip="{DynamicResource AddModsMenuItem}"
                          IsEnabled="{Binding IsOpen, ElementName=AddModsToggledPopup, Converter={StaticResource InverseBooleanConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Margin="1" Stretch="None" Source="{StaticResource AddIcon}"/>

                    <Path Grid.Column="1" Margin="2" VerticalAlignment="Center" Fill="{DynamicResource ForegroundBrush}" Data="M 0 0 L 3 3 L 6 0 Z"/>

                    <Popup x:Name="AddModsToggledPopup" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=AddModsToggleButton}"
                           PopupAnimation="Fade" AllowsTransparency="True" Focusable="False"
                           IsOpen="{Binding IsChecked, ElementName=AddModsToggleButton, Mode=TwoWay}">
                        <Border Background="{DynamicResource BackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">
                            <Menu IsMainMenu="False">
                                <MenuItem Header="{DynamicResource DownloadModsMenuItem}" Icon="{StaticResource DownloadIcon}" Command="{Binding DownloadModsCommand}"/>
                                <MenuItem Header="{DynamicResource AddModFilesMenuItem}" Icon="{StaticResource AddDocumentIcon}" Command="{Binding AddModsFromFilesCommand}"/>
                                <MenuItem Header="{DynamicResource AddModFolderMenuItem}" Icon="{StaticResource AddFolderIcon}" Command="{Binding AddModFromFolderCommand}"/>
                            </Menu>
                        </Border>
                    </Popup>
                </Grid>
            </ToggleButton>
        
            <Button ToolTip="{DynamicResource NewModpackMenuItem}" Command="{Binding CreateModpackCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource NewPackageIcon}"/>
            </Button>
            <Button ToolTip="{DynamicResource CreateLinkMenuItem}" Command="{Binding CreateLinkCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource LinkIcon}"/>
            </Button>
            
            <Separator/>

            <Button ToolTip="{DynamicResource UpdateModsMenuItem}" Command="{Binding UpdateModsCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource UpdateIcon}"/>
            </Button>
            <Button ToolTip="{DynamicResource DependenciesMenuItem}" Command="{Binding DownloadDependenciesCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource DependencyIcon}"/>
            </Button>

            <Separator/>

            <Button ToolTip="{DynamicResource ExportModpacksMenuItem}" Command="{Binding ExportModpacksCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource ExportPackageIcon}"/>
            </Button>
            <Button ToolTip="{DynamicResource ImportModpacksMenuItem}" Command="{Binding ImportModpacksCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource ImportPackageIcon}"/>
            </Button>

            <Separator/>

            <ComboBox Margin="2,0" Width="200" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding FactorioVersionsView}" SelectedItem="{Binding SelectedFactorioVersion}">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:FactorioVersion}">
                        <TextBlock Margin="4,1" VerticalAlignment="Center" Text="{Binding DisplayName}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button ToolTip="{DynamicResource VersionManagerMenuItem}" Command="{Binding OpenVersionManagerCommand}">
                <Image Margin="1" Stretch="None" Source="{StaticResource ConfigureIcon}"/>
            </Button>
            <Button Command="{Binding StartGameCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="Image" Grid.Column="0" Margin="1" Stretch="None" Source="{DynamicResource RunIcon}">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Grid.Column="1" Margin="2,0,4,0" Text="{DynamicResource StartGameMenuItem}" VerticalAlignment="Center"/>
                </Grid>
            </Button>
        </ToolBar>
        
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ModGridLength, Mode=TwoWay}" MinWidth="200"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="{Binding ModpackGridLength, Mode=TwoWay}" MinWidth="200"/>
            </Grid.ColumnDefinitions>

            <!-- Mods -->
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="4"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Row="1" Grid.Column="0" Margin="2,2,4,2" Content="{DynamicResource ModsHeader}" Style="{StaticResource AllActiveInactiveCheckBoxStyle}" IsChecked="{Binding AllModsActive}"/>
                <Rectangle Grid.Row="2" Grid.Column="0" Fill="{DynamicResource SelectionBrush}"/>

                <ToggleButton x:Name="ModsToggleButton" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" VerticalAlignment="Bottom" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                              IsEnabled="{Binding IsOpen, ElementName=ModsToggledPopup, Converter={StaticResource InverseBooleanConverter}}">
                    <Grid>
                        <Image Grid.Column="0" Margin="1" Width="18" Height="18" Stretch="None" Source="{StaticResource MenuIcon}"/>

                        <Popup x:Name="ModsToggledPopup" StaysOpen="False" Placement="Left" PlacementTarget="{Binding ElementName=ModsToggleButton}"
                               VerticalOffset="{Binding ActualHeight, ElementName=ModsToggleButton}" HorizontalOffset="{Binding ActualWidth, ElementName=ModsToggleButton}"
                               PopupAnimation="Fade" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsChecked, ElementName=ModsToggleButton, Mode=TwoWay}">
                            <Border Background="{DynamicResource BackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">
                                <Menu IsMainMenu="False">
                                    <MenuItem Header="{DynamicResource DownloadModsContextMenuItem}" Icon="{StaticResource DownloadIcon}"
                                              InputGestureText="{DynamicResource DownloadModsHotkey}" Command="{Binding DownloadModsCommand}"/>
                                    <MenuItem Header="{DynamicResource AddModFilesContextMenuItem}" Icon="{StaticResource AddDocumentIcon}"
                                              InputGestureText="{DynamicResource AddModFilesHotkey}" Command="{Binding AddModsFromFilesCommand}"/>
                                    <MenuItem Header="{DynamicResource DeleteSelectedModsMenuItem}" Icon="{StaticResource DeleteIcon}"
                                              InputGestureText="{StaticResource DeleteHotkey}" Command="{Binding DeleteSelectedModsCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource UpdateModsMenuItem}" Icon="{StaticResource UpdateIcon}"
                                              InputGestureText="{DynamicResource UpdateModsHotkey}" Command="{Binding UpdateModsCommand}"/>
                                    <MenuItem Header="{DynamicResource DependenciesMenuItem}" Icon="{StaticResource DependencyIcon}"
                                              InputGestureText="{DynamicResource DependenciesHotkey}" Command="{Binding DownloadDependenciesCommand}"/>
                                    <MenuItem Header="{DynamicResource BrowseModsOnlineMenuItem}" Icon="{StaticResource WebDestinationIcon}"
                                              Command="{Binding BrowseModsOnlineCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource ActivateDependenciesMenuItem}" CommandParameter="{StaticResource False}" Command="{Binding ActivateDependenciesCommand}"/>
                                    <MenuItem Header="{DynamicResource ActivateOptionalDependenciesMenuItem}" CommandParameter="{StaticResource True}" Command="{Binding ActivateDependenciesCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource ActivateSelectedModsMenuItem}" Command="{Binding ActivateSelectedModsCommand}"/>
                                    <MenuItem Header="{DynamicResource DeactivateSelectedModsMenuItem}" Command="{Binding DeactivateSelectedModsCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource SelectActiveModsMenuItem}" Command="{Binding SelectActiveModsCommand}"/>
                                    <MenuItem Header="{DynamicResource SelectInactiveModsMenuItem}" Command="{Binding SelectInactiveModsCommand}"/>
                                </Menu>
                            </Border>
                        </Popup>
                    </Grid>
                </ToggleButton>
            </Grid>
            <controls:DragDropReadyListBox x:Name="ModsListBox" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ModsView}"
                                       IsSynchronizedWithCurrentItem="False" SelectionMode="Extended" ScrollViewer.VerticalScrollBarVisibility="Visible"
                                       PreviewMouseDown="ModsListBoxPreviewMouseDownHandler" PreviewMouseMove="ModsListBoxPreviewMouseMoveHandler" PreviewMouseUp="ModsListBoxPreviewMouseUpHandler"
                                       AllowDrop="True" DragOver="ModsListBoxDragOverHandler" Drop="ModsListBoxDropHandler">
                <controls:DragDropReadyListBox.Resources>
                    <DataTemplate x:Key="SubitemTemplate" DataType="{x:Type model:ModDependency}">
                        <Border BorderBrush="Transparent" BorderThickness="1" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0" Margin="1" Source="{StaticResource OptionalIcon}" Visibility="{Binding IsOptional, Converter={StaticResource VisibilityConverter}}" Stretch="None" VerticalAlignment="Center" Height="16"/>
                                <Image Grid.Column="1" Margin="1" Source="{StaticResource InvertedIcon}" Visibility="{Binding IsInverted, Converter={StaticResource VisibilityConverter}}" Stretch="None" VerticalAlignment="Center" Height="16"/>
                                <TextBlock Grid.Column="2" Margin="1" VerticalAlignment="Center" Text="{Binding FriendlyDescription}" IsHitTestVisible="False"/>
                                <Image x:Name="DependencyWarningImage" Grid.Column="3" Margin="4,1" Source="{StaticResource WarningIcon}"
                                       Visibility="{Binding Unsatisfied, Converter={StaticResource VisibilityConverter}}" Stretch="None" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsOptional, Mode=OneTime}" Value="{StaticResource True}">
                                <Setter TargetName="DependencyWarningImage" Property="Opacity" Value="0.4"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </controls:DragDropReadyListBox.Resources>
                
                <controls:DragDropReadyListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type controls:DragDropReadyListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="800"/>
                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    </Style>
                </controls:DragDropReadyListBox.ItemContainerStyle>
                
                <controls:DragDropReadyListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <StackPanel/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Style.Setters>
                                    <Setter Property="Margin" Value="0,0,0,4"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <controls:DefaultExpandedExpander>
                                                    <controls:DefaultExpandedExpander.Header>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="26"/>
                                                                <RowDefinition Height="0"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="8,2" VerticalAlignment="Center" FontSize="14" Text="{Binding Name}"/>
                                                            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,-24,-4" Fill="{DynamicResource SelectionBrush}"/>
                                                        </Grid>
                                                    </controls:DefaultExpandedExpander.Header>
                                                    
                                                    <ItemsPresenter Margin="0,4,0,0"/>
                                                </controls:DefaultExpandedExpander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style.Setters>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </controls:DragDropReadyListBox.GroupStyle>

                <controls:DragDropReadyListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:Mod}">
                        <Expander>
                            <Expander.Header>
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox Grid.Column="0" Margin="4" Style="{StaticResource ActiveInactiveCheckBoxStyle}" IsChecked="{Binding Active, Mode=TwoWay}"/>
                                    <TextBlock Grid.Column="1" Margin="2,0" VerticalAlignment="Center" IsHitTestVisible="False" Text="{Binding FriendlyName}"/>
                                    <TextBlock Grid.Column="2" Margin="2,0" VerticalAlignment="Center" IsHitTestVisible="False" Text="{Binding Version}" Foreground="{DynamicResource MutedForegroundBrush}"/>
                                    <Button Grid.Column="3" Margin="2,0" Style="{StaticResource SettingsButtonStyle}" ToolTip="{DynamicResource ModSettingsToolTip}"
                                            Visibility="{Binding HasSettings, Converter={StaticResource VisibilityConverter}}" Command="{Binding ViewSettingsCommand}"/>
                                    <Border Grid.Column="5" Margin="2" Background="Transparent" ToolTip="{DynamicResource MissingDependenciesModToolTip}"
                                            Visibility="{Binding HasUnsatisfiedDependencies, Converter={StaticResource VisibilityConverter}}">
                                        <Image Margin="1" Source="{StaticResource DependencyWarningIcon}" Stretch="None"/>
                                    </Border>
                                    <Button Grid.Column="6" Margin="4,0" ToolTip="{DynamicResource DeleteToolTip}" Style="{StaticResource SmallCloseButton}"
                                            CommandParameter="{StaticResource True}" Command="{Binding DeleteCommand}"/>
                                </Grid>
                            </Expander.Header>

                            <Border Background="{DynamicResource MutedBackgroundBrush}">
                                <ItemsControl Margin="20,2,4,2" ItemsSource="{Binding DependenciesView}" ItemTemplate="{StaticResource SubitemTemplate}">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                                            <StackPanel IsItemsHost="True"/>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                            </Border>
                        </Expander>
                    </DataTemplate>
                </controls:DragDropReadyListBox.ItemTemplate>

                <controls:DragDropReadyListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{DynamicResource DownloadModsContextMenuItem}" Icon="{StaticResource DownloadIcon}"
                                              InputGestureText="{DynamicResource DownloadModsHotkey}" Command="{Binding DownloadModsCommand}"/>
                        <MenuItem Header="{DynamicResource AddModFilesContextMenuItem}" Icon="{StaticResource AddDocumentIcon}"
                                              InputGestureText="{DynamicResource AddModFilesHotkey}" Command="{Binding AddModsFromFilesCommand}"/>
                        <MenuItem Header="{DynamicResource DeleteSelectedModsMenuItem}" Icon="{StaticResource DeleteIcon}"
                                              InputGestureText="{StaticResource DeleteHotkey}" Command="{Binding DeleteSelectedModsCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource UpdateModsMenuItem}" Icon="{StaticResource UpdateIcon}"
                                              InputGestureText="{DynamicResource UpdateModsHotkey}" Command="{Binding UpdateModsCommand}"/>
                        <MenuItem Header="{DynamicResource DependenciesMenuItem}" Icon="{StaticResource DependencyIcon}"
                                              InputGestureText="{DynamicResource DependenciesHotkey}" Command="{Binding DownloadDependenciesCommand}"/>
                        <MenuItem Header="{DynamicResource BrowseModsOnlineMenuItem}" Icon="{StaticResource WebDestinationIcon}"
                                              Command="{Binding BrowseModsOnlineCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource ActivateDependenciesMenuItem}" CommandParameter="{StaticResource False}" Command="{Binding ActivateDependenciesCommand}"/>
                        <MenuItem Header="{DynamicResource ActivateOptionalDependenciesMenuItem}" CommandParameter="{StaticResource True}" Command="{Binding ActivateDependenciesCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource ActivateSelectedModsMenuItem}" Command="{Binding ActivateSelectedModsCommand}"/>
                        <MenuItem Header="{DynamicResource DeactivateSelectedModsMenuItem}" Command="{Binding DeactivateSelectedModsCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource SelectActiveModsMenuItem}" Command="{Binding SelectActiveModsCommand}"/>
                        <MenuItem Header="{DynamicResource SelectInactiveModsMenuItem}" Command="{Binding SelectInactiveModsCommand}"/>
                    </ContextMenu>
                </controls:DragDropReadyListBox.ContextMenu>
            </controls:DragDropReadyListBox>
            <DockPanel Grid.Row="2" Grid.Column="0" Margin="0,4,0,0">
                <Border DockPanel.Dock="Left" Background="{DynamicResource SelectionBrush}">
                    <Image Margin="1" Width="22" Height="22" Stretch="None" Source="{StaticResource SearchIcon}"/>
                </Border>
                <Border DockPanel.Dock="Right" BorderThickness="0,1,1,1" BorderBrush="{DynamicResource MutedBorderBrush}" Background="{DynamicResource MutedBackgroundBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBox Grid.Column="0" BorderThickness="0" Padding="2" MaxLines="1" Text="{Binding ModFilterPattern, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Grid.Column="1" Margin="4,0" VerticalAlignment="Center" Style="{StaticResource SmallCloseButton}" ToolTip="{DynamicResource ClearFilterToolTip}" Command="{Binding ClearModFilterCommand}"/>
                    </Grid>
                </Border>
            </DockPanel>

            <GridSplitter Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" Background="{DynamicResource BackgroundBrush}"/>

            <!-- Modpacks -->
            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="4"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Row="1" Grid.Column="0" Margin="2,2,4,2" Content="{DynamicResource ModpacksHeader}" Style="{StaticResource AllActiveInactiveCheckBoxStyle}" IsChecked="{Binding AllModpacksActive}"/>
                <Rectangle Grid.Row="2" Grid.Column="0" Fill="{DynamicResource SelectionBrush}"/>

                <ToggleButton x:Name="ModpacksToggleButton" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" VerticalAlignment="Bottom" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                              IsEnabled="{Binding IsOpen, ElementName=ModpacksToggledPopup, Converter={StaticResource InverseBooleanConverter}}">
                    <Grid>
                        <Image Grid.Column="0" Margin="1" Width="18" Height="18" Stretch="None" Source="{StaticResource MenuIcon}"/>

                        <Popup x:Name="ModpacksToggledPopup" StaysOpen="False" Placement="Left" PlacementTarget="{Binding ElementName=ModpacksToggleButton}"
                               VerticalOffset="{Binding ActualHeight, ElementName=ModsToggleButton}" HorizontalOffset="{Binding ActualWidth, ElementName=ModsToggleButton}"
                               PopupAnimation="Fade" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsChecked, ElementName=ModpacksToggleButton, Mode=TwoWay}">
                            <Border Background="{DynamicResource BackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">
                                <Menu IsMainMenu="False">
                                    <MenuItem Header="{DynamicResource NewModpackMenuItem}" Icon="{StaticResource NewPackageIcon}" InputGestureText="{DynamicResource NewModpackHotkey}"
                                              Command="{Binding CreateModpackCommand}"/>
                                    <MenuItem Header="{DynamicResource DeleteSelectedModpacksMenuItem}" Icon="{StaticResource DeleteIcon}" InputGestureText="{StaticResource DeleteHotkey}"
                                              Command="{Binding DeleteSelectedModpacksCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource ActivateSelectedModpacksMenuItem}" Command="{Binding ActivateSelectedModpacksCommand}"/>
                                    <MenuItem Header="{DynamicResource DeactivateSelectedModpacksMenuItem}" Command="{Binding DeactivateSelectedModpacksCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource SelectActiveModpacksMenuItem}" Command="{Binding SelectActiveModpacksCommand}"/>
                                    <MenuItem Header="{DynamicResource SelectInactiveModpacksMenuItem}" Command="{Binding SelectInactiveModpacksCommand}"/>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource ExportModSettingsMenuItem}" Command="{Binding ExportSelectedModpacksCommand}"/>
                                    <MenuItem Header="{DynamicResource ImportModSettingsMenuItem}" Command="{Binding ImportSelectedModpacksCommand}"/>
                                    <MenuItem Header="{DynamicResource RemoveModSettingsMenuItem}" Command="{Binding ExplodeSelectedModSettingsCommand}"/>

                                </Menu>
                            </Border>
                        </Popup>
                    </Grid>
                </ToggleButton>
            </Grid>
            <controls:DragDropReadyListBox x:Name="ModpacksListBox" Grid.Row="1" Grid.Column="2" ItemsSource="{Binding ModpacksView}"
                      IsSynchronizedWithCurrentItem="False" SelectionMode="Extended" ScrollViewer.VerticalScrollBarVisibility="Visible"
                      PreviewMouseDown="ModpackListBoxPreviewMouseDownHandler" MouseMove="ModpackListBoxMouseMoveHandler" PreviewMouseUp="ModpackListBoxPreviewMouseUpHandler"
                      AllowDrop="True" Drop="ModpackListBoxDropHandler" DragOver="ModpackListBoxDragOverHandler">
                <controls:DragDropReadyListBox.Resources>
                    <DataTemplate x:Key="SubitemTemplate" DataType="{x:Type model:IModReference}">
                        <Border BorderBrush="Transparent" BorderThickness="1" Background="Transparent">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                        To="{StaticResource SelectionColor}" Duration="0:0:0:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                        To="Transparent" Duration="0:0:0:0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                               
                                <CheckBox Grid.Column="0" Margin="4,3,4,2" Style="{StaticResource ActiveInactiveCheckBoxStyle}" IsChecked="{Binding Active, Mode=TwoWay}"/>
                                <Image Grid.Column="1" Margin="1" Source="{Binding Image}" Stretch="None" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="2" Margin="2,0" VerticalAlignment="Center" Text="{Binding DisplayName}" IsHitTestVisible="False"/>
                                <TextBlock Grid.Column="3" Margin="2,0" VerticalAlignment="Center" Text="{Binding VersionInfo}" IsHitTestVisible="False" Foreground="{DynamicResource MutedForegroundBrush}"/>
                                <TextBlock Grid.Column="4" Margin="2,0" VerticalAlignment="Center" Text="{Binding FactorioVersionInfo}" IsHitTestVisible="False" Foreground="{DynamicResource MutedForegroundBrush}"/>
                                <Image Grid.Column="6" Margin="1" Source="{StaticResource WarningIcon}"
                                       Visibility="{Binding HasUnsatisfiedDependencies, Converter={StaticResource VisibilityConverter}}" Stretch="None" VerticalAlignment="Center"/>
                                <Button Grid.Column="7" Margin="4,0" ToolTip="{DynamicResource RemoveToolTip}" Style="{StaticResource SmallCloseButton}"
                                    Command="{Binding RemoveFromParentCommand}"/>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <ControlTemplate x:Key="RenameButtonTemplate" TargetType="{x:Type ToggleButton}">
                        <Image x:Name="Image" Source="{DynamicResource RenameInactiveIcon}" Stretch="None" VerticalAlignment="Center"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.Setters>
                                    <Setter TargetName="Image" Property="Source" Value="{DynamicResource RenameActiveIcon}"/>
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="LockButtonTemplate" TargetType="{x:Type ToggleButton}">
                        <Image x:Name="Image" Source="{DynamicResource LockButtonIcon}" Stretch="None" VerticalAlignment="Center"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.Setters>
                                    <Setter TargetName="Image" Property="Source" Value="{DynamicResource LockHoverIcon}"/>
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </controls:DragDropReadyListBox.Resources>

                <controls:DragDropReadyListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type controls:DragDropReadyListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    </Style>
                </controls:DragDropReadyListBox.ItemContainerStyle>

                <controls:DragDropReadyListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:Modpack}">
                        <Expander IsExpanded="{Binding ContentsExpanded, Mode=TwoWay}">
                            <Expander.Header>
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox Grid.Column="1" Margin="4" Style="{StaticResource ActiveInactiveCheckBoxStyle}" IsChecked="{Binding Active, Mode=TwoWay}"/>
                                    <CheckBox Grid.Column="0" Margin="4" Style="{StaticResource ActiveInactiveCheckBoxStyle}" IsEnabled="{Binding ModSettingsNonNull}" ToolTip="{DynamicResource ModSettingsToolTip}"  IsChecked="{Binding ModSettingEnabled, Mode=TwoWay}"/>
                                    <ToggleButton x:Name="RenameButton" Grid.Column="2" Margin="2,0" ToolTip="{DynamicResource RenameToolTip}" Template="{StaticResource RenameButtonTemplate}"
                                                  IsChecked="{Binding Editing, Mode=TwoWay}" Focusable="False"/>
                                    <TextBlock Grid.Column="3" Margin="2,0" VerticalAlignment="Center" IsHitTestVisible="False" Text="{Binding Name, Mode=OneWay}"/>
                                    <TextBox Grid.Column="3" Margin="2,0" Padding="2" VerticalAlignment="Center" MaxLines="1"
                                             LostFocus="RenameTextBoxLostFocusHandler" IsVisibleChanged="RenameTextBoxVisibilityChangedHandler"
                                             Text="{Binding EditingName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Visibility="{Binding Editing, Converter={StaticResource VisibilityConverter}, Mode=TwoWay}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Return" Command="{Binding EndEditCommand}"/>
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <Button Grid.Column="4" Margin="2,0" Style="{StaticResource SettingsButtonStyle}" ToolTip="{DynamicResource ModSettingsToolTip}"
                                            Visibility="{Binding HasSettings, Converter={StaticResource VisibilityConverter}}" Command="{Binding ViewSettingsCommand}"/>
                                    <Border Grid.Column="6" Margin="2" Background="Transparent" ToolTip="{DynamicResource MissingDependenciesModpackToolTip}"
                                            Visibility="{Binding HasUnsatisfiedDependencies, Converter={StaticResource VisibilityConverter}}">
                                        <Image Margin="1" Source="{StaticResource DependencyWarningIcon}" Stretch="None"/>
                                    </Border>
                                    <ToggleButton Grid.Column="7" Margin="2,0" ToolTip="{DynamicResource LockToolTip}" Template="{StaticResource LockButtonTemplate}"
                                                  IsChecked="{Binding IsLocked, Mode=TwoWay}" Focusable="False"/>
                                    <Button Grid.Column="8" Margin="4,0" ToolTip="{DynamicResource DeleteToolTip}" Style="{StaticResource SmallCloseButton}"
                                            CommandParameter="{StaticResource True}" Command="{Binding DeleteCommand}"/>
                                </Grid>
                            </Expander.Header>

                            <Border Background="{DynamicResource MutedBackgroundBrush}">
                                <ItemsControl Margin="20,2,4,2" ItemsSource="{Binding ModsView}" ItemTemplate="{StaticResource SubitemTemplate}">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                                            <StackPanel IsItemsHost="True"/>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                            </Border>
                        </Expander>
                    </DataTemplate>
                </controls:DragDropReadyListBox.ItemTemplate>

                <controls:DragDropReadyListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{DynamicResource NewModpackMenuItem}" Icon="{StaticResource NewPackageIcon}" InputGestureText="{DynamicResource NewModpackHotkey}"
                                  Command="{Binding CreateModpackCommand}"/>
                        <MenuItem Header="{DynamicResource DeleteSelectedModpacksMenuItem}" Icon="{StaticResource DeleteIcon}" InputGestureText="{StaticResource DeleteHotkey}"
                                  Command="{Binding DeleteSelectedModpacksCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource ActivateSelectedModpacksMenuItem}" Command="{Binding ActivateSelectedModpacksCommand}"/>
                        <MenuItem Header="{DynamicResource DeactivateSelectedModpacksMenuItem}" Command="{Binding DeactivateSelectedModpacksCommand}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource SelectActiveModpacksMenuItem}" Command="{Binding SelectActiveModpacksCommand}"/>
                        <MenuItem Header="{DynamicResource SelectInactiveModpacksMenuItem}" Command="{Binding SelectInactiveModpacksCommand}"/>

                        <Separator/>
                        <MenuItem Header="{DynamicResource ExportModSettingsMenuItem}" Command="{Binding ExportSelectedModSettingsCommand}"/>
                        <MenuItem Header="{DynamicResource ImportModSettingsMenuItem}" Command="{Binding ImportSelectedModSettingsCommand}"/>
                        <MenuItem Header="{DynamicResource RemoveModSettingsMenuItem}" Command="{Binding ExplodeSelectedModSettingsCommand}"/>

                    </ContextMenu>
                </controls:DragDropReadyListBox.ContextMenu>
            </controls:DragDropReadyListBox>
            <DockPanel Grid.Row="2" Grid.Column="2" Margin="0,4,0,0">
                <Border DockPanel.Dock="Left" Background="{DynamicResource SelectionBrush}">
                    <Image Margin="1" Width="22" Height="22" Stretch="None" Source="{StaticResource SearchIcon}"/>
                </Border>
                <Border DockPanel.Dock="Right" BorderThickness="0,1,1,1" BorderBrush="{DynamicResource MutedBorderBrush}" Background="{DynamicResource MutedBackgroundBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" BorderThickness="0" Padding="2" MaxLines="1" Text="{Binding ModpackFilterPattern, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Grid.Column="1" Margin="4,0" VerticalAlignment="Center" Style="{StaticResource SmallCloseButton}" ToolTip="{DynamicResource ClearFilterToolTip}" Command="{Binding ClearModpackFilterCommand}"/>
                    </Grid>
                </Border>
            </DockPanel>
            
        </Grid>
    </Grid>
</controls:LayoutRoundingWindow>
